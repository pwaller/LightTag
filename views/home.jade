div.content
  div.page-header
    h1 #{title}
      small 
  
  #welcome.container.row
    h2 Welcome!
    .span8
      form#form.well.form-inline(onsubmit="return false;")
        .row
          .span2
            label Who are you?
          .span4
            input#name(type="text", placeholder=".. I am bob")
            //
            button.btn(type="submit") Go!
        .row
          .offset2.span4
            ul.color-chooser
              each color in colors
                li.color(class="labelstyle-#{color}")
                  label
                    input(name="color", type="radio", value="#{color}")
  
  .container.row
    #ncirc 0
    #players.span2
      //div.alert.alert-info
        h4 a
        .progress.progress-success
          .bar(style="width: 50%")
    .span8  
      div#container(style='text-align: center;')// border: 2px solid red;')

footer

script
  $(function () {
    $("#name").focus();
    
    $("#form input[name=color]:first").prop("checked", true).parents("li").addClass("selected");
    
    $(".color-chooser input").click(function () {
      console.log("Clicked! ", $(this).val());
      $(".color-chooser li").removeClass("selected");
      $(this).parents("li").addClass("selected");
    });
    
    $("input,button", this).prop("disabled", false);
    
    $("#form").submit(function (e) {
      e.preventDefault();
      $("#form").off("submit");
      // Prevent duplicate submission:
      $("input,button", this).prop("disabled", true);
      //$("#form").prop("disabled", true);
      
      var name = $("#name").val();
      $("#players").append(
        $("<div>").addClass("alert alert-info")
          .append($("<div>").text("Le " + name))
          .append($("<div>").addClass("progress progress-success")
            .append($("<div>").addClass("bar").attr("style", "width: 20%")))
      );
          
      $("#welcome").fadeOut();
      
      var graphics = new Graphics();
      graphics.renderer_element.hide().delay(500).fadeIn();
      
      var client = new Client(graphics);
    });
  });
  
  // set the scene size
  var WIDTH = 640,
    HEIGHT = 480,
    DIAGONAL = Math.sqrt(Math.pow(WIDTH, 2) + Math.pow(HEIGHT, 2));

  function Graphics() {
    var container = $('#container');
    
    var renderer = new THREE.WebGLRenderer();
    // TODO(pwaller): Implement fallback, use less points on shells
    //var renderer = new THREE.CanvasRenderer();
    this.renderer_element = $(renderer.domElement);
    renderer.setSize(WIDTH, HEIGHT);

    container.append(renderer.domElement);
    var stats = new Stats();
    stats.domElement.style.position = 'relative';
    stats.domElement.style.top = '-530px';
    container.append(stats.domElement);

    renderer.domElement.onselectstart = function () { return false; }
    this.renderer_element.attr("style", "display:inline; background: black; cursor:none;");
    // border: 2px solid grey; margin: 0 auto");
    
    this.scene = new THREE.Scene();
    var scene = this.scene;
    
    var camera = new THREE.OrthographicCamera(0, WIDTH, 0, HEIGHT, -100, 400);
    scene.add(camera);
        
    var pointLight = new THREE.PointLight(0xFFFFFF);
    pointLight.position.x = WIDTH / 2;
    pointLight.position.y = HEIGHT / 2;
    pointLight.position.z = -130;
    scene.add(pointLight);    
    scene.add(new THREE.AmbientLight(0x000f00));
        
    function animate() {
      renderer.render(scene, camera);
      stats.update();
      requestAnimationFrame(animate);
    }
    
    animate();
  }
